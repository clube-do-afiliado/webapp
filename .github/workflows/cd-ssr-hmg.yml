name: CD SSR - HMG
run-name: Deploy to ${{ inputs.project }} SSR

on:
  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: Choice a project
        required: true
        options:
          - store

jobs:
  setup:
    uses: ./.github/workflows/setup.yml
    with:
      BUILD_ENV: homolog
    secrets: inherit
  
  project-env:
    runs-on: ubuntu-latest
    outputs:
      PROJECT_ENV: ${{ steps.convert.outputs.PROJECT_ENV }}
    steps:
      - name: Convert inputs to uppercase and set environment variables
        id: convert
        run: |
          echo "::set-output name=PROJECT_ENV::$(echo ${{ inputs.project }} | tr '[:lower:]' '[:upper:]')"

  build-project:
    needs: [setup, project-env]
    uses: ./.github/workflows/projects-ssr.yml
    with:
      ENVIRONMENT: ${{ needs.project-env.outputs.PROJECT_ENV }} HMG
      BUILD_ENV: homolog
      PATH: .next/standalone
      PROJECT: ${{inputs.project}}
      COMMAND: build
      FIREBASE_PROJECT_ID: clube-do-afiliado-homolog
      SSO_URL:  ${{ vars.STG_SSO_URL }}
      ADMIN_URL: ${{ vars.STG_ADMIN_URL }}
      STORE_URL:  ${{ vars.STG_STORE_URL }}
      BACKOFFICE_URL:  ${{ vars.STG_BACKOFFICE_URL }}
    secrets:
      FIREBASE_API_KEY: ${{ secrets.STG_FIREBASE_API_KEY }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.STG_FIREBASE_MESSAGING_SENDER_ID }}

  deploy-project:
    needs: [build-project, project-env]
    uses: ./.github/workflows/deploy-ssr.yml
    with:
      ENVIRONMENT: ${{ needs.project-env.outputs.PROJECT_ENV }}
      BUILD_ENV: homolog
      PATH: .next/standalone
      PROJECT: ${{ inputs.project }}
    secrets:
      RENDER_DEPLOY_HOOK_URL: ${{ secrets.STG_RENDER_DEPLOY_HOOK_URL }}